/* Copyright (C) 2023 Alif Semiconductor - All Rights Reserved.
 * Use, distribution and modification of this code is permitted under the
 * terms stated in the Alif Semiconductor Software License Agreement
 *
 * You should have received a copy of the Alif Semiconductor Software
 * License Agreement with this file. If not, please write to:
 * contact@alifsemi.com, or visit: https: //alifsemi.com/license
 *
 */

#include <dt-bindings/pinctrl/balletto-pinctrl.h>
#include <dt-bindings/i2c/i2c.h>
#include <dt-bindings/gpio/gpio.h>

/ {
	aliases {
		audio-codec = &wm8904;
		i2s-bus = &i2s0;
		i2s-mic = &i2s2;
	};

	soc {

	};
};

&i2s0 {
	/delete-property/ clock-frequency;
	/delete-property/ driver_instance;
	compatible = "alif,i2s-sync";
	interrupts = <141 3>;
	bit-depth = <16>;
	sample-rate = <48000>;
	status = "okay";
};

&i2c1 {
	clock-frequency = <I2C_BITRATE_STANDARD>;
	status = "okay";

	wm8904: wm8904@1a {
		compatible = "cirrus,wm8904";
		reg = <0x1a>;
		status = "okay";
	};
};

&i2s2 {
	/delete-property/ clock-frequency;
	/delete-property/ driver_instance;
	compatible = "alif,i2s-sync";
	bit-depth = <16>;
	sample-rate = <48000>;
	status = "okay";
};

&pinctrl {
	pinctrl_i2c1: pinctrl_i2c1 {
		group0 {
			/* Note: defined pinmux names are wrong so just setting numbers directly */
			pinmux = < PINMUX_PIN(PIN_P7_3, 4) >, /* I2C1 SCL DEVKIT*/
				< PINMUX_PIN(PIN_P7_2, 4) >; /* I2C1 SDA DEVKIT*/
			read_enable = < 0x1 >;
		};
	};

	pinctrl_i2s0: pinctrl_i2s0 {
		group0 {
			/* Note: defined pinmux names are wrong so just setting numbers directly */
			pinmux = <PINMUX_PIN(PIN_P2_4, 2)>, /* I2S0 SDI A  */
				<PINMUX_PIN(PIN_P2_5, 2)>, /* I2S0 SDO A  */
				<PINMUX_PIN(PIN_P1_7, 3)>, /* I2S0 WS A   */
				<PINMUX_PIN(PIN_P1_6, 3)>; /* I2S0 SCLK A */
		};
	};

	pinctrl_i2c0: pinctrl_i2c0 {
		group0 {
			pinmux = <PIN_P2_4__I2C0_SCL_B>,
				<PIN_P2_5__I2C0_SDA_B>;
			read_enable = <0x1>;
		};
	};
};

/* Joystick pins */
&pinctrl_gpio5 {
	group0 {
		pinmux = < PIN_P5_0__GPIO >,
			 < PIN_P5_1__GPIO >,
			 < PIN_P5_2__GPIO >,
			 < PIN_P5_3__GPIO >,
			 < PIN_P5_4__GPIO >,
			 < PIN_P5_5__GPIO >,
			 < PIN_P5_6__GPIO >,
			 < PIN_P5_7__GPIO >;
		read_enable = < 0x1 >;
	};

	group1 {
		pinmux = < PIN_P5_7__GPIO >;
		driver_state_control = <1>;
	};
};
