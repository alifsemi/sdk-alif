def Build_SW_Echo_Client = 'Pending'
def Build_SW_Echo_Server = 'Pending'
def Flash_board_echo_server = 'Pending'
def Flash_board_echo_client = 'Pending'
def smoke_tests = 'Pending'
def Flash_board = 'Pending'
def Build_SW = 'Pending'
def Build_SW_Broadcast_sink = 'Pending'
def Build_SW_Broadcast_source = 'Pending'
def Build_SW_Unicast_sink = 'Pending'
def Build_SW_unicast_source = 'Pending'
def Build_SW_Ble_beacon_sample = 'Pending'
def Build_SW_Ble_battery_sample = 'Pending'
def Build_SW_Ble_blinky_sample = 'Pending'
def Build_SW_Ble_blood_pressure_sample = 'Pending'
def Build_SW_Ble_continuos_glucose_monitor_sample = 'Pending'
def Build_SW_Ble_Cygling_Power_Sample = 'Pending'
def Build_SW_Cygling_Speed_and_Cadence_Sample = 'Pending'
def Build_SW_Build_Glucose_Profile_Sample = 'Pending'
def Build_SW_Hello_Sample = 'Pending'
def Build_SW_Heart_Rate_Sample = 'Pending'
def Build_SW_le_periph_past = 'Pengind'
def Build_SW_Health_Thermometer_Sample = 'Pengind'
def Build_SW_Pulse_Oximeter_Sample = 'Pending'
def Build_SW_Power_management_sample ='Pending'
def Build_SW_Proximity_Profile_Sample = 'Pending'
def Build_SW_Running_Speed_And_Cadence_Sample = 'Pending'
def Build_SW_Weight_Scale_Sample = 'Pending'
def Build_SW_Ble_Throughtput = 'Pending'
def Build_SW_Mesh_Light_Bulb_Sample = 'Pending'
def Build_SW_SMP_Service = 'Pending'

pipeline {
    agent any

    stages {
        stage('Checkout') {
            steps {
                checkout scm
            }
        }

        stage('Pr_Build for echo-client and echo-server') {
            when {
                anyOf {
                    branch 'PR-*'
                    branch 'main'
                }
            }
            agent { label 'pr_check_sdk_alif' }
            options { skipDefaultCheckout() }
            steps {
                script {
                    catchError(buildResult: 'SUCCESS', stageResult: 'FAILURE') {
                        try {
                            sh '''#!/bin/bash -xe
                            pwd
                            env
                            cd /root/alif/public/alif
                            git status
                            git clean -fd
                            git pull
                            if [[ -v CHANGE_ID ]]; then
                                git branch -D pr-${CHANGE_ID} || true
                                git clean -fd
                                git fetch origin pull/${CHANGE_ID}/head:pr-${CHANGE_ID}
                                git checkout pr-${CHANGE_ID}
                            fi
                            cd ..
                            west update
                            ls -la
                            cd /root/alif/public/alif/scripts
                            pip install -r requirements.txt
                            cd /root/alif/public/zephyr/scripts
                            pip install -r requirements.txt
                            cd /root/alif/public
                            west build -p always -b alif_b1_dk_rtss_he zephyr/samples/net/sockets/echo_client -- -DEXTRA_CONF_FILE=overlay-ot.conf
                            cp /root/alif/public/build/zephyr/zephyr.bin $WORKSPACE
                            cp /root/alif/public/alif/automation/B1-test-app.json $WORKSPACE
                            mv /root/alif/public/build $WORKSPACE
                            cd $WORKSPACE
                            tar -cvf build_client.tar build/
                            rm -fr build/
                            pwd
                            ls -la
                            '''
                            stash name: 'echo_client.bin', includes: 'zephyr.bin'
                            stash name: 'echo_client_B1-test-app.json', includes: 'B1-test-app.json'
                            Build_SW_Echo_Client = 'Pass'
                        } catch (Exception e) {
                            Build_SW_Echo_Client = 'Fail'
                            error('Build failed')
                        }
                    }
                    if (Build_SW_Echo_Client == 'Pass') {
                        catchError(buildResult: 'SUCCESS', stageResult: 'FAILURE') {
                            try {
                                sh '''#!/bin/bash -xe
                                cd /root/alif/public
                                west build -p always -b alif_b1_dk_rtss_he zephyr/samples/net/sockets/echo_server -- -DEXTRA_CONF_FILE=overlay-ot.conf
                                cp /root/alif/public/build/zephyr/zephyr.bin $WORKSPACE
                                cp /root/alif/public/alif/automation/B1-test-app.json $WORKSPACE
                                mv /root/alif/public/build $WORKSPACE
                                cd $WORKSPACE
                                tar -cvf build_server.tar build/
                                pwd
                                ls -la
                                '''
                                stash name: 'echo_server.bin', includes: 'zephyr.bin'
                                stash name: 'echo_server_B1-test-app.json', includes: 'B1-test-app.json'
                                Build_SW_Echo_Server = 'Pass'
                            } catch (Exception e) {
                                Build_SW_Echo_Server = 'Fail'
                                error('Build failed')
                            }
                        }
                    }
                }
            }
            post {
                always {
                    archiveArtifacts artifacts: '*.tar', fingerprint: true
                }
            }
        }

        stage('Flash the board for echo_client') {
            agent { label 'lasse' }
            steps {
                script {
                    catchError(buildResult: 'SUCCESS', stageResult: 'FAILURE') {
                        try {
                            unstash name: 'echo_client.bin'
                            unstash name: 'echo_client_B1-test-app.json'
                            sh """#!/bin/bash -xe
                            pwd
                            rsync -a --delete $ALIF_SETOOLS_ORIG $ALIF_SETOOLS_LOCATION
                            cp zephyr.bin $ALIF_SETOOLS_LOCATION/build/images/test-app.bin
                            cp B1-test-app.json $ALIF_SETOOLS_LOCATION/build/config/
                            pushd $ALIF_SETOOLS_LOCATION
                            sed -e 's/ttyUSB0/ttyAlifSEDUT1/g' isp_config_data_temp.cfg > isp_config_data.cfg
                            ./tools-config -p "B1 (AB1C1F4M51820PH) - 1.8 MRAM / 2.0 SRAM" -r "A0"
                            ./app-gen-toc --filename build/config/B1-test-app.json
                            ./app-write-mram -p
                            popd
                            """
                            Flash_board_echo_client = 'Pass'
                        } catch (Exception e) {
                            Flash_board_echo_client = 'Fail'
                            error('Flash_board failed')
                        }
                    }
                }
            }
        }

        stage('Flash the board for echo_server') {
            agent { label 'lasse' }
            steps {
                script {
                    catchError(buildResult: 'SUCCESS', stageResult: 'FAILURE') {
                        try {
                            unstash name: 'echo_server.bin'
                            unstash name: 'echo_server_B1-test-app.json'
                            sh """#!/bin/bash -xe
                            pwd
                            rsync -a --delete $ALIF_SETOOLS_ORIG $ALIF_SETOOLS_LOCATION
                            cp zephyr.bin $ALIF_SETOOLS_LOCATION/build/images/test-app.bin
                            cp B1-test-app.json $ALIF_SETOOLS_LOCATION/build/config/
                            pushd $ALIF_SETOOLS_LOCATION
                            sed -e 's/ttyUSB0/ttyAlifSEDUT2/g' isp_config_data_temp.cfg > isp_config_data.cfg
                            ./tools-config -p "B1 (AB1C1F4M51820PH) - 1.8 MRAM / 2.0 SRAM" -r "A0"
                            ./app-gen-toc --filename build/config/B1-test-app.json
                            ./app-write-mram -p
                            popd
                            """
                            reset_board()
                            Flash_board_echo_server = 'Pass'
                        } catch (Exception e) {
                            Flash_board_echo_server = 'Fail'
                            error('Flash_board failed')
                        }
                    }
                }
            }
        }
        stage('Pr_Build For Parallel') {
            parallel {
                stage('Pr_Build Broadcast sink') {
                    when {
                        anyOf {
                            branch 'PR-*'
                            branch 'main'
                        }
                    }
                    agent { label 'zephyr_alif_sdk_ble' }
                    options { skipDefaultCheckout() }
                    steps {
                        script {
                            catchError(buildResult: 'SUCCESS', stageResult: 'FAILURE') {
                                try{
                                    sh '''#!/bin/bash -xe
                                    pwd
                                    cd /root/alif
                                    west forall -c "git clean -fdx"
                                    cd /root/alif/alif/
                                    git status
                                    if [[ -v CHANGE_ID ]]; then
                                        git branch -D pr-${CHANGE_ID} || true
                                        git fetch origin pull/${CHANGE_ID}/head:pr-${CHANGE_ID}
                                        git checkout pr-${CHANGE_ID}
                                    else
                                        git fetch origin -pu
                                        git checkout main
                                        git reset --hard origin/main
                                    fi
                                    cd ..
                                    west update
                                    cd /root/alif/alif/
                                    ls -la
                                    west build -p always -b alif_b1_dk_rtss_he samples/bluetooth/le_audio/broadcast_sink
                                    cp /root/alif/alif/build/zephyr/zephyr.bin $WORKSPACE
                                    mv /root/alif/alif/build $WORKSPACE
                                    cd $WORKSPACE
                                    tar -cvf broadcast_sink.tar build/
                                    pwd
                                    '''
                                    stash name: 'Broadcast_sink.bin', includes: 'zephyr.bin'
                                    Build_SW_Broadcast_sink = 'Pass'
                                } catch (Exception e) {
                                    Build_SW_Broadcast_sink = 'Fail'
                                    error('Build failed')
                                }
                            }
                        }
                    }
                    post {
                        always {
                            archiveArtifacts artifacts: 'broadcast_sink.tar', fingerprint: true
                        }
                    }
                }

                stage('Pr_Build Broadcast source') {
                    when {
                        anyOf {
                            branch 'PR-*'
                            branch 'main'
                        }
                    }
                    agent { label 'zephyr_alif_sdk_ble' }
                    options { skipDefaultCheckout() }
                    steps {
                        script {
                            catchError(buildResult: 'SUCCESS', stageResult: 'FAILURE') {
                                try{
                                    sh '''#!/bin/bash -xe
                                    pwd
                                    cd /root/alif
                                    west forall -c "git clean -fdx"
                                    cd /root/alif/alif/
                                    git status
                                    if [[ -v CHANGE_ID ]]; then
                                        git branch -D pr-${CHANGE_ID} || true
                                        git fetch origin pull/${CHANGE_ID}/head:pr-${CHANGE_ID}
                                        git checkout pr-${CHANGE_ID}
                                    else
                                        git fetch origin -pu
                                        git checkout main
                                        git reset --hard origin/main
                                    fi
                                    cd ..
                                    west update
                                    cd /root/alif/alif/
                                    ls -la
                                    west build -p always -b alif_b1_dk_rtss_he samples/bluetooth/le_audio/broadcast_source
                                    cp /root/alif/alif/build/zephyr/zephyr.bin $WORKSPACE
                                    mv /root/alif/alif/build $WORKSPACE
                                    cd $WORKSPACE
                                    tar -cvf broadcast_source.tar build/
                                    pwd
                                    '''
                                    stash name: 'Broadcast_source.bin', includes: 'zephyr.bin'
                                    Build_SW_Broadcast_source = 'Pass'
                                } catch (Exception e) {
                                    Build_SW_Broadcast_source = 'Fail'
                                    error('Build failed')
                                }
                            }
                        }
                    }
                    post {
                        always {
                            archiveArtifacts artifacts: 'broadcast_source.tar', fingerprint: true
                        }
                    }
                }
                stage('Pr_unicast sink') {
                    when {
                        anyOf {
                            branch 'PR-*'
                            branch 'main'
                        }
                    }
                    agent { label 'zephyr_alif_sdk_ble' }
                    options { skipDefaultCheckout() }
                    steps {
                        script {
                            catchError(buildResult: 'SUCCESS', stageResult: 'FAILURE') {
                                try{
                                    sh '''#!/bin/bash -xe
                                    pwd
                                    cd /root/alif
                                    west forall -c "git clean -fdx"
                                    cd /root/alif/alif/
                                    git status
                                    if [[ -v CHANGE_ID ]]; then
                                        git branch -D pr-${CHANGE_ID} || true
                                        git fetch origin pull/${CHANGE_ID}/head:pr-${CHANGE_ID}
                                        git checkout pr-${CHANGE_ID}
                                    else
                                        git fetch origin -pu
                                        git checkout main
                                        git reset --hard origin/main
                                    fi
                                    cd ..
                                    west update
                                    cd /root/alif/alif/
                                    ls -la
                                    west build -p always -b alif_b1_dk_rtss_he samples/bluetooth/le_audio/unicast_sink
                                    cp /root/alif/alif/build/zephyr/zephyr.bin $WORKSPACE
                                    mv /root/alif/alif/build $WORKSPACE
                                    cd $WORKSPACE
                                    tar -cvf Build_SW_Unicast_sink.tar build/
                                    pwd
                                    '''
                                    stash name: 'unicast_sink.bin', includes: 'zephyr.bin'
                                    Build_SW_Unicast_sink = 'Pass'
                                } catch (Exception e) {
                                    Build_SW_Unicast_sink = 'Fail'
                                    error('Build failed')
                                }
                            }
                        }
                    }
                    post {
                        always {
                            archiveArtifacts artifacts: 'Build_SW_Unicast_sink.tar', fingerprint: true
                        }
                    }
                }
                stage('Pr_unicast source') {
                    when {
                        anyOf {
                            branch 'PR-*'
                            branch 'main'
                        }
                    }
                    agent { label 'zephyr_alif_sdk_ble' }
                    options { skipDefaultCheckout() }
                    steps {
                        script {
                            catchError(buildResult: 'SUCCESS', stageResult: 'FAILURE') {
                                try{
                                    sh '''#!/bin/bash -xe
                                    pwd
                                    cd /root/alif
                                    west forall -c "git clean -fdx"
                                    cd /root/alif/alif/
                                    git status
                                    if [[ -v CHANGE_ID ]]; then
                                        git branch -D pr-${CHANGE_ID} || true
                                        git fetch origin pull/${CHANGE_ID}/head:pr-${CHANGE_ID}
                                        git checkout pr-${CHANGE_ID}
                                    else
                                        git fetch origin -pu
                                        git checkout main
                                        git reset --hard origin/main
                                    fi
                                    cd ..
                                    west update
                                    cd /root/alif/alif/
                                    ls -la
                                    west build -p always -b alif_b1_dk_rtss_he samples/bluetooth/le_audio/unicast_source
                                    cp /root/alif/alif/build/zephyr/zephyr.bin $WORKSPACE
                                    mv /root/alif/alif/build $WORKSPACE
                                    cd $WORKSPACE
                                    tar -cvf unicast_source.tar build/
                                    pwd
                                    '''
                                    stash name: 'unicast_source.bin', includes: 'zephyr.bin'
                                    Build_SW_unicast_source = 'Pass'
                                } catch (Exception e) {
                                    Build_SW_unicast_source = 'Fail'
                                    error('Build failed')
                                }
                            }
                        }
                    }
                    post {
                        always {
                            archiveArtifacts artifacts: 'unicast_source.tar', fingerprint: true
                        }
                    }
                }
                stage('Pr_Ble beacon sample') {
                    when {
                        anyOf {
                            branch 'PR-*'
                            branch 'main'
                        }
                    }
                    agent { label 'zephyr_alif_sdk_ble' }
                    options { skipDefaultCheckout() }
                    steps {
                        script {
                            catchError(buildResult: 'SUCCESS', stageResult: 'FAILURE') {
                                try{
                                    sh '''#!/bin/bash -xe
                                    pwd
                                    cd /root/alif
                                    west forall -c "git clean -fdx"
                                    cd /root/alif/alif/
                                    git status
                                    if [[ -v CHANGE_ID ]]; then
                                        git branch -D pr-${CHANGE_ID} || true
                                        git fetch origin pull/${CHANGE_ID}/head:pr-${CHANGE_ID}
                                        git checkout pr-${CHANGE_ID}
                                    else
                                        git fetch origin -pu
                                        git checkout main
                                        git reset --hard origin/main
                                    fi
                                    cd ..
                                    west update
                                    cd /root/alif/alif/
                                    ls -la
                                    west build -p always -b alif_b1_dk_rtss_he samples/bluetooth/le_periph
                                    cp /root/alif/alif/build/zephyr/zephyr.bin $WORKSPACE
                                    mv /root/alif/alif/build $WORKSPACE
                                    cd $WORKSPACE
                                    tar -cvf Ble_beacon_sample.tar build/
                                    pwd
                                    '''
                                    stash name: 'ble_beacon_sample.bin', includes: 'zephyr.bin'
                                    Build_SW_Ble_beacon_sample = 'Pass'
                                } catch (Exception e) {
                                    Build_SW_Ble_beacon_sample = 'Fail'
                                    error('Build failed')
                                }
                            }
                        }
                    }
                    post {
                        always {
                            archiveArtifacts artifacts: 'Ble_beacon_sample.tar', fingerprint: true
                        }
                    }
                }
                stage('Pr_Ble battery sample') {
                    when {
                        anyOf {
                            branch 'PR-*'
                            branch 'main'
                        }
                    }
                    agent { label 'zephyr_alif_sdk_ble' }
                    options { skipDefaultCheckout() }
                    steps {
                        script {
                            catchError(buildResult: 'SUCCESS', stageResult: 'FAILURE') {
                                try{
                                    sh '''#!/bin/bash -xe
                                    pwd
                                    cd /root/alif
                                    west forall -c "git clean -fdx"
                                    cd /root/alif/alif/
                                    git status
                                    if [[ -v CHANGE_ID ]]; then
                                        git branch -D pr-${CHANGE_ID} || true
                                        git fetch origin pull/${CHANGE_ID}/head:pr-${CHANGE_ID}
                                        git checkout pr-${CHANGE_ID}
                                    else
                                        git fetch origin -pu
                                        git checkout main
                                        git reset --hard origin/main
                                    fi
                                    cd ..
                                    west update
                                    cd /root/alif/alif/
                                    ls -la
                                    west build -p always -b alif_b1_dk_rtss_he samples/bluetooth/le_periph_batt
                                    cp /root/alif/alif/build/zephyr/zephyr.bin $WORKSPACE
                                    mv /root/alif/alif/build $WORKSPACE
                                    cd $WORKSPACE
                                    tar -cvf Ble_battery_sample.tar build/
                                    pwd
                                    '''
                                    stash name: 'ble_battery_sample.bin', includes: 'zephyr.bin'
                                    Build_SW_Ble_battery_sample = 'Pass'
                                } catch (Exception e) {
                                    Build_SW_Ble_battery_sample = 'Fail'
                                    error('Build failed')
                                }
                            }
                        }
                    }
                    post {
                        always {
                            archiveArtifacts artifacts: 'Ble_battery_sample.tar', fingerprint: true
                        }
                    }
                }
                stage('Pr_Ble blinky sample') {
                    when {
                        anyOf {
                            branch 'PR-*'
                            branch 'main'
                        }
                    }
                    agent { label 'zephyr_alif_sdk_ble' }
                    options { skipDefaultCheckout() }
                    steps {
                        script {
                            catchError(buildResult: 'SUCCESS', stageResult: 'FAILURE') {
                                try{
                                    sh '''#!/bin/bash -xe
                                    pwd
                                    cd /root/alif
                                    west forall -c "git clean -fdx"
                                    cd /root/alif/alif/
                                    git status
                                    if [[ -v CHANGE_ID ]]; then
                                        git branch -D pr-${CHANGE_ID} || true
                                        git fetch origin pull/${CHANGE_ID}/head:pr-${CHANGE_ID}
                                        git checkout pr-${CHANGE_ID}
                                    else
                                        git fetch origin -pu
                                        git checkout main
                                        git reset --hard origin/main
                                    fi
                                    cd ..
                                    west update
                                    cd /root/alif/alif/
                                    ls -la
                                    west build -p always -b alif_b1_dk_rtss_he samples/bluetooth/le_periph_blinky
                                    cp /root/alif/alif/build/zephyr/zephyr.bin $WORKSPACE
                                    mv /root/alif/alif/build $WORKSPACE
                                    cd $WORKSPACE
                                    tar -cvf Ble_blinky_sample.tar build/
                                    pwd
                                    '''
                                    stash name: 'ble_blinky_sample.bin', includes: 'zephyr.bin'
                                    Build_SW_Ble_blinky_sample = 'Pass'
                                } catch (Exception e) {
                                    Build_SW_Ble_blinky_sample = 'Fail'
                                    error('Build failed')
                                }
                            }
                        }
                    }
                    post {
                        always {
                            archiveArtifacts artifacts: 'Ble_blinky_sample.tar', fingerprint: true
                        }
                    }
                }
                stage('Pr_Ble blood pressure sample') {
                    when {
                        anyOf {
                            branch 'PR-*'
                            branch 'main'
                        }
                    }
                    agent { label 'zephyr_alif_sdk_ble' }
                    options { skipDefaultCheckout() }
                    steps {
                        script {
                            catchError(buildResult: 'SUCCESS', stageResult: 'FAILURE') {
                                try{
                                    sh '''#!/bin/bash -xe
                                    pwd
                                    cd /root/alif
                                    west forall -c "git clean -fdx"
                                    cd /root/alif/alif/
                                    git status
                                    if [[ -v CHANGE_ID ]]; then
                                        git branch -D pr-${CHANGE_ID} || true
                                        git fetch origin pull/${CHANGE_ID}/head:pr-${CHANGE_ID}
                                        git checkout pr-${CHANGE_ID}
                                    else
                                        git fetch origin -pu
                                        git checkout main
                                        git reset --hard origin/main
                                    fi
                                    cd ..
                                    west update
                                    cd /root/alif/alif/
                                    ls -la
                                    west build -p always -b alif_b1_dk_rtss_he samples/bluetooth/le_periph_blps
                                    cp /root/alif/alif/build/zephyr/zephyr.bin $WORKSPACE
                                    mv /root/alif/alif/build $WORKSPACE
                                    cd $WORKSPACE
                                    tar -cvf Build_SW_Ble_blood_pressure_sample.tar build/
                                    pwd
                                    '''
                                    stash name: 'Build_SW_Ble_blood_pressure_sample.bin', includes: 'zephyr.bin'
                                    Build_SW_Ble_blood_pressure_sample = 'Pass'
                                } catch (Exception e) {
                                    Build_SW_Ble_blood_pressure_sample = 'Fail'
                                    error('Build failed')
                                }
                            }
                        }
                    }
                    post {
                        always {
                            archiveArtifacts artifacts: 'Build_SW_Ble_blood_pressure_sample.tar', fingerprint: true
                        }
                    }
                }
                stage('Pr_Ble continuous glucose monitor sample') {
                    when {
                        anyOf {
                            branch 'PR-*'
                            branch 'main'
                        }
                    }
                    agent { label 'zephyr_alif_sdk_ble' }
                    options { skipDefaultCheckout() }
                    steps {
                        script {
                            catchError(buildResult: 'SUCCESS', stageResult: 'FAILURE') {
                                try{
                                    sh '''#!/bin/bash -xe
                                    pwd
                                    cd /root/alif
                                    west forall -c "git clean -fdx"
                                    cd /root/alif/alif/
                                    git status
                                    if [[ -v CHANGE_ID ]]; then
                                        git branch -D pr-${CHANGE_ID} || true
                                        git fetch origin pull/${CHANGE_ID}/head:pr-${CHANGE_ID}
                                        git checkout pr-${CHANGE_ID}
                                    else
                                        git fetch origin -pu
                                        git checkout main
                                        git reset --hard origin/main
                                    fi
                                    cd ..
                                    west update
                                    cd /root/alif/alif/
                                    ls -la
                                    west build -p always -b alif_b1_dk_rtss_he samples/bluetooth/le_periph_cgms
                                    cp /root/alif/alif/build/zephyr/zephyr.bin $WORKSPACE
                                    mv /root/alif/alif/build $WORKSPACE
                                    cd $WORKSPACE
                                    tar -cvf Ble_continuos_glucose_monitor.tar build/
                                    pwd
                                    '''
                                    stash name: 'Ble_continuos_glucose_monitor.bin', includes: 'zephyr.bin'
                                    Build_SW_Ble_continuos_glucose_monitor_sample = 'Pass'
                                } catch (Exception e) {
                                    Build_SW_Ble_continuos_glucose_monitor_sample = 'Fail'
                                    error('Build failed')
                                }
                            }
                        }
                    }
                    post {
                        always {
                            archiveArtifacts artifacts: 'Ble_continuos_glucose_monitor.tar', fingerprint: true
                        }
                    }
                }
                stage('Pr_Ble Cygling Power Sample') {
                    when {
                        anyOf {
                            branch 'PR-*'
                            branch 'main'
                        }
                    }
                    agent { label 'zephyr_alif_sdk_ble' }
                    options { skipDefaultCheckout() }
                    steps {
                        script {
                            catchError(buildResult: 'SUCCESS', stageResult: 'FAILURE') {
                                try{
                                    sh '''#!/bin/bash -xe
                                    pwd
                                    cd /root/alif
                                    west forall -c "git clean -fdx"
                                    cd /root/alif/alif/
                                    git status
                                    if [[ -v CHANGE_ID ]]; then
                                        git branch -D pr-${CHANGE_ID} || true
                                        git fetch origin pull/${CHANGE_ID}/head:pr-${CHANGE_ID}
                                        git checkout pr-${CHANGE_ID}
                                    else
                                        git fetch origin -pu
                                        git checkout main
                                        git reset --hard origin/main
                                    fi
                                    cd ..
                                    west update
                                    cd /root/alif/alif/
                                    ls -la
                                    west build -p always -b alif_b1_dk_rtss_he samples/bluetooth/le_periph_cpps
                                    cp /root/alif/alif/build/zephyr/zephyr.bin $WORKSPACE
                                    mv /root/alif/alif/build $WORKSPACE
                                    cd $WORKSPACE
                                    tar -cvf Ble_cygling_power_sample.tar build/
                                    pwd
                                    '''
                                    stash name: 'Ble_Cygling_Power_sample.bin', includes: 'zephyr.bin'
                                    Build_SW_Ble_Cygling_Power_Sample = 'Pass'
                                } catch (Exception e) {
                                    Build_SW_Ble_Cygling_Power_Sample = 'Fail'
                                    error('Build failed')
                                }
                            }
                        }
                    }
                    post {
                        always {
                            archiveArtifacts artifacts: 'Ble_cygling_power_sample.tar', fingerprint: true
                        }
                    }
                }
                stage('Pr_Ble Cygling_Speed_and_Cadence_Sample') {
                    when {
                        anyOf {
                            branch 'PR-*'
                            branch 'main'
                        }
                    }
                    agent { label 'zephyr_alif_sdk_ble' }
                    options { skipDefaultCheckout() }
                    steps {
                        script {
                            catchError(buildResult: 'SUCCESS', stageResult: 'FAILURE') {
                                try{
                                    sh '''#!/bin/bash -xe
                                    pwd
                                    cd /root/alif
                                    west forall -c "git clean -fdx"
                                    cd /root/alif/alif/
                                    git status
                                    if [[ -v CHANGE_ID ]]; then
                                        git branch -D pr-${CHANGE_ID} || true
                                        git fetch origin pull/${CHANGE_ID}/head:pr-${CHANGE_ID}
                                        git checkout pr-${CHANGE_ID}
                                    else
                                        git fetch origin -pu
                                        git checkout main
                                        git reset --hard origin/main
                                    fi
                                    cd ..
                                    west update
                                    cd /root/alif/alif/
                                    ls -la
                                    west build -p always -b alif_b1_dk_rtss_he samples/bluetooth/le_periph_cscps
                                    cp /root/alif/alif/build/zephyr/zephyr.bin $WORKSPACE
                                    mv /root/alif/alif/build $WORKSPACE
                                    cd $WORKSPACE
                                    tar -cvf Ble_cygling_speed_and_cadence_sample.tar build/
                                    pwd
                                    '''
                                    stash name: 'Ble_Cygling_speed_and_cadence_sample.bin', includes: 'zephyr.bin'
                                    Build_SW_Cygling_Speed_and_Cadence_Sample = 'Pass'
                                } catch (Exception e) {
                                    Build_SW_Cygling_Speed_and_Cadence_Sample = 'Fail'
                                    error('Build failed')
                                }
                            }
                        }
                    }
                    post {
                        always {
                            archiveArtifacts artifacts: 'Ble_cygling_speed_and_cadence_sample.tar', fingerprint: true
                        }
                    }
                }
                stage('Pr_Ble Glucose_Profile_Sample') {
                    when {
                        anyOf {
                            branch 'PR-*'
                            branch 'main'
                        }
                    }
                    agent { label 'zephyr_alif_sdk_ble' }
                    options { skipDefaultCheckout() }
                    steps {
                        script {
                            catchError(buildResult: 'SUCCESS', stageResult: 'FAILURE') {
                                try{
                                    sh '''#!/bin/bash -xe
                                    pwd
                                    cd /root/alif
                                    west forall -c "git clean -fdx"
                                    cd /root/alif/alif/
                                    git status
                                    if [[ -v CHANGE_ID ]]; then
                                        git branch -D pr-${CHANGE_ID} || true
                                        git fetch origin pull/${CHANGE_ID}/head:pr-${CHANGE_ID}
                                        git checkout pr-${CHANGE_ID}
                                    else
                                        git fetch origin -pu
                                        git checkout main
                                        git reset --hard origin/main
                                    fi
                                    cd ..
                                    west update
                                    cd /root/alif/alif/
                                    ls -la
                                    west build -p always -b alif_b1_dk_rtss_he samples/bluetooth/le_periph_glps
                                    cp /root/alif/alif/build/zephyr/zephyr.bin $WORKSPACE
                                    mv /root/alif/alif/build $WORKSPACE
                                    cd $WORKSPACE
                                    tar -cvf Ble_Glucose_Profile_Sample.tar build/
                                    pwd
                                    '''
                                    stash name: 'Ble_Glucose_Profile_Sample.bin', includes: 'zephyr.bin'
                                    Build_SW_Build_Glucose_Profile_Sample = 'Pass'
                                } catch (Exception e) {
                                    Build_SW_Build_Glucose_Profile_Sample = 'Fail'
                                    error('Build failed')
                                }
                            }
                        }
                    }
                    post {
                        always {
                            archiveArtifacts artifacts: 'Ble_Glucose_Profile_Sample.tar', fingerprint: true
                        }
                    }
                }
                stage('Pr_Hello_Sample') {
                    when {
                        anyOf {
                            branch 'PR-*'
                            branch 'main'
                        }
                    }
                    agent { label 'zephyr_alif_sdk_ble' }
                    options { skipDefaultCheckout() }
                    steps {
                        script {
                            catchError(buildResult: 'SUCCESS', stageResult: 'FAILURE') {
                                try{
                                    sh '''#!/bin/bash -xe
                                    pwd
                                    cd /root/alif
                                    west forall -c "git clean -fdx"
                                    cd /root/alif/alif/
                                    git status
                                    if [[ -v CHANGE_ID ]]; then
                                        git branch -D pr-${CHANGE_ID} || true
                                        git fetch origin pull/${CHANGE_ID}/head:pr-${CHANGE_ID}
                                        git checkout pr-${CHANGE_ID}
                                    else
                                        git fetch origin -pu
                                        git checkout main
                                        git reset --hard origin/main
                                    fi
                                    cd ..
                                    west update
                                    cd /root/alif/alif/
                                    ls -la
                                    west build -p always -b alif_b1_dk_rtss_he samples/bluetooth/le_periph_hello
                                    cp /root/alif/alif/build/zephyr/zephyr.bin $WORKSPACE
                                    mv /root/alif/alif/build $WORKSPACE
                                    cd $WORKSPACE
                                    tar -cvf Build_SW_Hello_Sample.tar build/
                                    pwd
                                    '''
                                    stash name: 'Build_SW_Hello_Sample.bin', includes: 'zephyr.bin'
                                    Build_SW_Hello_Sample = 'Pass'
                                } catch (Exception e) {
                                    Build_SW_Hello_Sample = 'Fail'
                                    error('Build failed')
                                }
                            }
                        }
                    }
                    post {
                        always {
                            archiveArtifacts artifacts: 'Build_SW_Hello_Sample.tar', fingerprint: true
                        }
                    }
                }
                stage('Pr_Heart_Rate_Sample') {
                    when {
                        anyOf {
                            branch 'PR-*'
                            branch 'main'
                        }
                    }
                    agent { label 'zephyr_alif_sdk_ble' }
                    options { skipDefaultCheckout() }
                    steps {
                        script {
                            catchError(buildResult: 'SUCCESS', stageResult: 'FAILURE') {
                                try{
                                    sh '''#!/bin/bash -xe
                                    pwd
                                    cd /root/alif
                                    west forall -c "git clean -fdx"
                                    cd /root/alif/alif/
                                    git status
                                    if [[ -v CHANGE_ID ]]; then
                                        git branch -D pr-${CHANGE_ID} || true
                                        git fetch origin pull/${CHANGE_ID}/head:pr-${CHANGE_ID}
                                        git checkout pr-${CHANGE_ID}
                                    else
                                        git fetch origin -pu
                                        git checkout main
                                        git reset --hard origin/main
                                    fi
                                    cd ..
                                    west update
                                    cd /root/alif/alif/
                                    ls -la
                                    rm -rf build
                                    west build --pristine=always -d build -b alif_b1_dk_rtss_he samples/bluetooth/le_periph_hr
                                    cp /root/alif/alif/build/zephyr/zephyr.bin $WORKSPACE
                                    mv /root/alif/alif/build $WORKSPACE
                                    cd $WORKSPACE
                                    tar -cvf Build_SW_Heart_Rate_Sample.tar build/
                                    pwd
                                    '''
                                    stash name: 'Build_SW_Heart_Rate_Sample.bin', includes: 'zephyr.bin'
                                    Build_SW_Heart_Rate_Sample = 'Pass'
                                } catch (Exception e) {
                                    Build_SW_Heart_Rate_Sample = 'Fail'
                                    error('Build failed')
                                }
                            }
                        }
                    }
                    post {
                        always {
                            archiveArtifacts artifacts: 'Build_SW_Heart_Rate_Sample.tar', fingerprint: true
                        }
                    }
                }
                stage('Pr_Health_Thermometer_Sample') {
                    when {
                        anyOf {
                            branch 'PR-*'
                            branch 'main'
                        }
                    }
                    agent { label 'zephyr_alif_sdk_ble' }
                    options { skipDefaultCheckout() }
                    steps {
                        script {
                            catchError(buildResult: 'SUCCESS', stageResult: 'FAILURE') {
                                try{
                                    sh '''#!/bin/bash -xe
                                    pwd
                                    cd /root/alif
                                    west forall -c "git clean -fdx"
                                    cd /root/alif/alif/
                                    git status
                                    if [[ -v CHANGE_ID ]]; then
                                        git branch -D pr-${CHANGE_ID} || true
                                        git fetch origin pull/${CHANGE_ID}/head:pr-${CHANGE_ID}
                                        git checkout pr-${CHANGE_ID}
                                    else
                                        git fetch origin -pu
                                        git checkout main
                                        git reset --hard origin/main
                                    fi
                                    cd ..
                                    west manifest --path
                                    west update
                                    cd /root/alif/alif/
                                    ls -la
                                    west build -p always -b alif_b1_dk_rtss_he samples/bluetooth/le_periph_htpt
                                    cp /root/alif/alif/build/zephyr/zephyr.bin $WORKSPACE
                                    mv /root/alif/alif/build $WORKSPACE
                                    cd $WORKSPACE
                                    tar -cvf Build_SW_Health_Thermometer.tar build/
                                    pwd
                                    '''
                                    stash name: 'Build_SW_Health_Thermometer.bin', includes: 'zephyr.bin'
                                    Build_SW_Health_Thermometer_Sample = 'Pass'
                                } catch (Exception e) {
                                    Build_SW_Health_Thermometer_Sample = 'Fail'
                                    error('Build failed')
                                }
                            }
                        }
                    }
                    post {
                        always {
                            archiveArtifacts artifacts: 'Build_SW_Health_Thermometer.tar', fingerprint: true
                        }
                    }
                }
                stage('Pr_le_periph_past') {
                    when {
                        anyOf {
                            branch 'PR-*'
                            branch 'main'
                        }
                    }
                    agent { label 'zephyr_alif_sdk_ble' }
                    options { skipDefaultCheckout() }
                    steps {
                        script {
                            catchError(buildResult: 'SUCCESS', stageResult: 'FAILURE') {
                                try{
                                    sh '''#!/bin/bash -xe
                                    pwd
                                    cd /root/alif
                                    west forall -c "git clean -fdx"
                                    cd /root/alif/alif/
                                    git status
                                    if [[ -v CHANGE_ID ]]; then
                                        git branch -D pr-${CHANGE_ID} || true
                                        git fetch origin pull/${CHANGE_ID}/head:pr-${CHANGE_ID}
                                        git checkout pr-${CHANGE_ID}
                                    else
                                        git fetch origin -pu
                                        git checkout main
                                        git reset --hard origin/main
                                    fi
                                    ls -la
                                    cd ..
                                    west update
                                    cd /root/alif/alif/
                                    ls -la
                                    west build -p always -b alif_b1_dk_rtss_he samples/bluetooth/le_periph_past
                                    cp /root/alif/alif/build/zephyr/zephyr.bin $WORKSPACE
                                    mv /root/alif/alif/build $WORKSPACE
                                    cd $WORKSPACE
                                    tar -cvf Build_SW_le_periph_past.tar build/
                                    pwd
                                    '''
                                    stash name: 'Build_SW_le_periph_past.bin', includes: 'zephyr.bin'
                                    Build_SW_le_periph_past = 'Pass'
                                } catch (Exception e) {
                                    Build_SW_le_periph_past = 'Fail'
                                    error('Build failed')
                                }
                            }
                        }
                    }
                    post {
                        always {
                            archiveArtifacts artifacts: 'Build_SW_le_periph_past.tar', fingerprint: true
                        }
                    }
                }
                stage('Pr_Pulse_Oximeter_Sample') {
                    when {
                        anyOf {
                            branch 'PR-*'
                            branch 'main'
                        }
                    }
                    agent { label 'zephyr_alif_sdk_ble' }
                    options { skipDefaultCheckout() }
                    steps {
                        script {
                            catchError(buildResult: 'SUCCESS', stageResult: 'FAILURE') {
                                try{
                                    sh '''#!/bin/bash -xe
                                    pwd
                                    cd /root/alif
                                    west forall -c "git clean -fdx"
                                    cd /root/alif/alif/
                                    git status
                                    if [[ -v CHANGE_ID ]]; then
                                        git branch -D pr-${CHANGE_ID} || true
                                        git fetch origin pull/${CHANGE_ID}/head:pr-${CHANGE_ID}
                                        git checkout pr-${CHANGE_ID}
                                    else
                                        git fetch origin -pu
                                        git checkout main
                                        git reset --hard origin/main
                                    fi
                                    cd ..
                                    west update
                                    cd /root/alif/alif/
                                    ls -la
                                    west build -p always -b alif_b1_dk_rtss_he samples/bluetooth/le_periph_plxp
                                    cp /root/alif/alif/build/zephyr/zephyr.bin $WORKSPACE
                                    mv /root/alif/alif/build $WORKSPACE
                                    cd $WORKSPACE
                                    tar -cvf Build_SW_Pulse_Oximeter_Sample.tar build/
                                    pwd
                                    '''
                                    stash name: 'Build_SW_Pulse_Oximeter_Sample.bin', includes: 'zephyr.bin'
                                    Build_SW_Pulse_Oximeter_Sample = 'Pass'
                                } catch (Exception e) {
                                    Build_SW_Pulse_Oximeter_Sample = 'Fail'
                                    error('Build failed')
                                }
                            }
                        }
                    }
                    post {
                        always {
                            archiveArtifacts artifacts: 'Build_SW_Pulse_Oximeter_Sample.tar', fingerprint: true
                        }
                    }
                }
                stage('Pr_Power_Management_Sample') {
                    when {
                        anyOf {
                            branch 'PR-*'
                            branch 'main'
                        }
                    }
                    agent { label 'zephyr_alif_sdk_ble' }
                    options { skipDefaultCheckout() }
                    steps {
                        script {
                            catchError(buildResult: 'SUCCESS', stageResult: 'FAILURE') {
                                try{
                                    sh '''#!/bin/bash -xe
                                    pwd
                                    cd /root/alif
                                    west forall -c "git clean -fdx"
                                    cd /root/alif/alif/
                                    git status
                                    if [[ -v CHANGE_ID ]]; then
                                        git branch -D pr-${CHANGE_ID} || true
                                        git fetch origin pull/${CHANGE_ID}/head:pr-${CHANGE_ID}
                                        git checkout pr-${CHANGE_ID}
                                    else
                                        git fetch origin -pu
                                        git checkout main
                                        git reset --hard origin/main
                                    fi
                                    cd ..
                                    west update
                                    cd /root/alif/alif/
                                    ls -la
                                    west build -p always -b alif_b1_dk_rtss_he samples/bluetooth/le_periph_pm
                                    cp /root/alif/alif/build/zephyr/zephyr.bin $WORKSPACE
                                    mv /root/alif/alif/build $WORKSPACE
                                    cd $WORKSPACE
                                    tar -cvf Build_SW_Power_management_sample.tar build/
                                    pwd
                                    '''
                                    stash name: 'Build_SW_Power_management_sample.bin', includes: 'zephyr.bin'
                                    Build_SW_Power_management_sample = 'Pass'
                                } catch (Exception e) {
                                    Build_SW_Power_management_sample = 'Fail'
                                    error('Build failed')
                                }
                            }
                        }
                    }
                    post {
                        always {
                            archiveArtifacts artifacts: 'Build_SW_Power_management_sample.tar', fingerprint: true
                        }
                    }
                }
                stage('Pr_Proximity_Profile_Sample') {
                    when {
                        anyOf {
                            branch 'PR-*'
                            branch 'main'
                        }
                    }
                    agent { label 'zephyr_alif_sdk_ble' }
                    options { skipDefaultCheckout() }
                    steps {
                        script {
                            catchError(buildResult: 'SUCCESS', stageResult: 'FAILURE') {
                                try{
                                    sh '''#!/bin/bash -xe
                                    pwd
                                    cd /root/alif
                                    west forall -c "git clean -fdx"
                                    cd /root/alif/alif/
                                    git status
                                    if [[ -v CHANGE_ID ]]; then
                                        git branch -D pr-${CHANGE_ID} || true
                                        git fetch origin pull/${CHANGE_ID}/head:pr-${CHANGE_ID}
                                        git checkout pr-${CHANGE_ID}
                                    else
                                        git fetch origin -pu
                                        git checkout main
                                        git reset --hard origin/main
                                    fi
                                    cd ..
                                    west update
                                    cd /root/alif/alif/
                                    ls -la
                                    west build -p always -b alif_b1_dk_rtss_he samples/bluetooth/le_periph_prxp
                                    cp /root/alif/alif/build/zephyr/zephyr.bin $WORKSPACE
                                    mv /root/alif/alif/build $WORKSPACE
                                    cd $WORKSPACE
                                    tar -cvf Build_SW_Proximity_Profile_Sample.tar build/
                                    pwd
                                    '''
                                    stash name: 'Build_SW_Proximity_Profile_Sample.bin', includes: 'zephyr.bin'
                                    Build_SW_Proximity_Profile_Sample = 'Pass'
                                } catch (Exception e) {
                                    Build_SW_Proximity_Profile_Sample = 'Fail'
                                    error('Build failed')
                                }
                            }
                        }
                    }
                    post {
                        always {
                            archiveArtifacts artifacts: 'Build_SW_Proximity_Profile_Sample.tar', fingerprint: true
                        }
                    }
                }
                stage('Pr_Running_Speed_And_Cadence_Sample') {
                    when {
                        anyOf {
                            branch 'PR-*'
                            branch 'main'
                        }
                    }
                    agent { label 'zephyr_alif_sdk_ble' }
                    options { skipDefaultCheckout() }
                    steps {
                        script {
                            catchError(buildResult: 'SUCCESS', stageResult: 'FAILURE') {
                                try{
                                    sh '''#!/bin/bash -xe
                                    pwd
                                    cd /root/alif
                                    west forall -c "git clean -fdx"
                                    cd /root/alif/alif/
                                    git status
                                    if [[ -v CHANGE_ID ]]; then
                                        git branch -D pr-${CHANGE_ID} || true
                                        git fetch origin pull/${CHANGE_ID}/head:pr-${CHANGE_ID}
                                        git checkout pr-${CHANGE_ID}
                                    else
                                        git fetch origin -pu
                                        git checkout main
                                        git reset --hard origin/main
                                    fi
                                    cd ..
                                    west update
                                    cd /root/alif/alif/
                                    ls -la
                                    west build -p always -b alif_b1_dk_rtss_he samples/bluetooth/le_periph_rscps
                                    cp /root/alif/alif/build/zephyr/zephyr.bin $WORKSPACE
                                    mv /root/alif/alif/build $WORKSPACE
                                    cd $WORKSPACE
                                    tar -cvf Ble_Running_Speed_And_Cadence_Sample.tar build/
                                    pwd
                                    '''
                                    stash name: 'Build_SW_Running_Speed_And_Cadence_Sample.bin', includes: 'zephyr.bin'
                                    Build_SW_Running_Speed_And_Cadence_Sample = 'Pass'
                                } catch (Exception e) {
                                    Build_SW_Running_Speed_And_Cadence_Sample = 'Fail'
                                    error('Build failed')
                                }
                            }
                        }
                    }
                    post {
                        always {
                            archiveArtifacts artifacts: 'Ble_Running_Speed_And_Cadence_Sample.tar', fingerprint: true
                        }
                    }
                }
                stage('Pr_Weight_Scale_Sample') {
                    when {
                        anyOf {
                            branch 'PR-*'
                            branch 'main'
                        }
                    }
                    agent { label 'zephyr_alif_sdk_ble' }
                    options { skipDefaultCheckout() }
                    steps {
                        script {
                            catchError(buildResult: 'SUCCESS', stageResult: 'FAILURE') {
                                try{
                                    sh '''#!/bin/bash -xe
                                    pwd
                                    cd /root/alif
                                    west forall -c "git clean -fdx"
                                    cd /root/alif/alif/
                                    git status
                                    if [[ -v CHANGE_ID ]]; then
                                        git branch -D pr-${CHANGE_ID} || true
                                        git fetch origin pull/${CHANGE_ID}/head:pr-${CHANGE_ID}
                                        git checkout pr-${CHANGE_ID}
                                    else
                                        git fetch origin -pu
                                        git checkout main
                                        git reset --hard origin/main
                                    fi
                                    cd ..
                                    west update
                                    cd /root/alif/alif/
                                    ls -la
                                    west build -p always -b alif_b1_dk_rtss_he samples/bluetooth/le_periph_ws
                                    cp /root/alif/alif/build/zephyr/zephyr.bin $WORKSPACE
                                    mv /root/alif/alif/build $WORKSPACE
                                    cd $WORKSPACE
                                    tar -cvf Build_SW_Weight_Scale_Sample.tar build/
                                    pwd
                                    '''
                                    stash name: 'Build_SW_Weight_Scale_Sample.bin', includes: 'zephyr.bin'
                                    Build_SW_Weight_Scale_Sample = 'Pass'
                                } catch (Exception e) {
                                    Build_SW_Weight_Scale_Sample = 'Fail'
                                    error('Build failed')
                                }
                            }
                        }
                    }
                    post {
                        always {
                            archiveArtifacts artifacts: 'Build_SW_Weight_Scale_Sample.tar', fingerprint: true
                        }
                    }
                }
                stage('Pr_Throughput') {
                    when {
                        anyOf {
                            branch 'PR-*'
                            branch 'main'
                        }
                    }
                    agent { label 'zephyr_alif_sdk_ble' }
                    options { skipDefaultCheckout() }
                    steps {
                        script {
                            catchError(buildResult: 'SUCCESS', stageResult: 'FAILURE') {
                                try{
                                    sh '''#!/bin/bash -xe
                                    pwd
                                    cd /root/alif
                                    west forall -c "git clean -fdx"
                                    cd /root/alif/alif/
                                    git status
                                    if [[ -v CHANGE_ID ]]; then
                                        git branch -D pr-${CHANGE_ID} || true
                                        git fetch origin pull/${CHANGE_ID}/head:pr-${CHANGE_ID}
                                        git checkout pr-${CHANGE_ID}
                                    else
                                        git fetch origin -pu
                                        git checkout main
                                        git reset --hard origin/main
                                    fi
                                    cd ..
                                    west update
                                    cd /root/alif/alif/
                                    ls -la
                                    west build -p always -b alif_b1_dk_rtss_he samples/bluetooth/le_throughput
                                    cp /root/alif/alif/build/zephyr/zephyr.bin $WORKSPACE
                                    mv /root/alif/alif/build $WORKSPACE
                                    cd $WORKSPACE
                                    tar -cvf Build_SW_Ble_Throughtput.tar build/
                                    pwd
                                    '''
                                    stash name: 'Build_SW_Ble_Throughtput.bin', includes: 'zephyr.bin'
                                    Build_SW_Ble_Throughtput = 'Pass'
                                } catch (Exception e) {
                                    Build_SW_Ble_Throughtput = 'Fail'
                                    error('Build failed')
                                }
                            }
                        }
                    }
                    post {
                        always {
                            archiveArtifacts artifacts: 'Build_SW_Ble_Throughtput.tar', fingerprint: true
                        }
                    }
                }
                stage('Pr_Mesh_Light_Bulb_Sample') {
                    when {
                        anyOf {
                            branch 'PR-*'
                            branch 'main'
                        }
                    }
                    agent { label 'zephyr_alif_sdk_ble' }
                    options { skipDefaultCheckout() }
                    steps {
                        script {
                            catchError(buildResult: 'SUCCESS', stageResult: 'FAILURE') {
                                try{
                                    sh '''#!/bin/bash -xe
                                    pwd
                                    cd /root/alif
                                    west forall -c "git clean -fdx"
                                    cd /root/alif/alif/
                                    git status
                                    if [[ -v CHANGE_ID ]]; then
                                        git branch -D pr-${CHANGE_ID} || true
                                        git fetch origin pull/${CHANGE_ID}/head:pr-${CHANGE_ID}
                                        git checkout pr-${CHANGE_ID}
                                    else
                                        git fetch origin -pu
                                        git checkout main
                                        git reset --hard origin/main
                                    fi
                                    cd ..
                                    west update
                                    cd /root/alif/alif/
                                    ls -la
                                    west build -p always -b alif_b1_dk_rtss_he samples/bluetooth/mesh_light_bulb
                                    cp /root/alif/alif/build/zephyr/zephyr.bin $WORKSPACE
                                    mv /root/alif/alif/build $WORKSPACE
                                    cd $WORKSPACE
                                    tar -cvf Build_SW_Mesh_Light_Bulb_Sample.tar build/
                                    pwd
                                    '''
                                    stash name: 'Build_SW_Mesh_Light_Bulb_Sample.bin', includes: 'zephyr.bin'
                                    Build_SW_Mesh_Light_Bulb_Sample = 'Pass'
                                } catch (Exception e) {
                                    Build_SW_Mesh_Light_Bulb_Sample = 'Fail'
                                    error('Build failed')
                                }
                            }
                        }
                    }
                    post {
                        always {
                            archiveArtifacts artifacts: 'Build_SW_Mesh_Light_Bulb_Sample.tar', fingerprint: true
                        }
                    }
                }
                stage('Pr_SMP_Service') {
                    when {
                        anyOf {
                            branch 'PR-*'
                            branch 'main'
                        }
                    }
                    agent { label 'zephyr_alif_sdk_ble' }
                    options { skipDefaultCheckout() }
                    steps {
                        script {
                            catchError(buildResult: 'SUCCESS', stageResult: 'FAILURE') {
                                try{
                                    sh '''#!/bin/bash -xe
                                    pwd
                                    cd /root/alif
                                    west forall -c "git clean -fdx"
                                    cd /root/alif/alif/
                                    git status
                                    if [[ -v CHANGE_ID ]]; then
                                        git branch -D pr-${CHANGE_ID} || true
                                        git fetch origin pull/${CHANGE_ID}/head:pr-${CHANGE_ID}
                                        git checkout pr-${CHANGE_ID}
                                    else
                                        git fetch origin -pu
                                        git checkout main
                                        git reset --hard origin/main
                                    fi
                                    cd ..
                                    west update
                                    cd /root/alif/alif/
                                    ls -la
                                    west build -p always -b alif_b1_dk_rtss_he samples/bluetooth/smp_svr
                                    cp /root/alif/alif/build/zephyr/zephyr.bin $WORKSPACE
                                    mv /root/alif/alif/build $WORKSPACE
                                    cd $WORKSPACE
                                    tar -cvf Build_SW_SMP_Service.tar build/
                                    pwd
                                    '''
                                    stash name: 'Build_SW_SMP_Service.bin', includes: 'zephyr.bin'
                                    Build_SW_SMP_Service = 'Pass'
                                } catch (Exception e) {
                                    Build_SW_SMP_Service = 'Fail'
                                    error('Build failed')
                                }
                            }
                        }
                    }
                    post {
                        always {
                            archiveArtifacts artifacts: 'Build_SW_SMP_Service.tar', fingerprint: true
                        }
                    }
                }
            }
        }

        stage('Pr_Build for test-app') {
            when {
                anyOf {
                    branch 'PR-*'
                    branch 'main'
                }
            }
            agent { label 'zephyr_alif_sdk_ble' }
            options { skipDefaultCheckout() }
            steps {
                script {
                    catchError(buildResult: 'SUCCESS', stageResult: 'FAILURE') {
                        try{
                            sh '''#!/bin/bash -xe
                            pwd
                            cd /root/alif
                            west forall -c "git clean -fdx"
                            cd /root/alif/sdk-alif/
                            git status
                            if [[ -v CHANGE_ID ]]; then
                                git branch -D pr-${CHANGE_ID} || true
                                git fetch origin pull/${CHANGE_ID}/head:pr-${CHANGE_ID}
                                git checkout pr-${CHANGE_ID}
                            else
                                git fetch origin -pu
                                git checkout main
                                git reset --hard origin/main
                            fi
                            cd ..
                            west update
                            cd /root/alif/sdk-alif/
                            ls -la
                            west build -p always -b alif_b1_dk_rtss_he applications/testapp
                            cp /root/alif/sdk-alif/build/zephyr/zephyr.bin $WORKSPACE
                            mv /root/alif/sdk-alif/build $WORKSPACE
                            cd $WORKSPACE
                            tar -cvf test_app_build.tar build/
                            pwd
                            '''
                            stash name: 'zephyr.bin', includes: 'zephyr.bin'
                            Build_SW = 'Pass'
                        } catch (Exception e) {
                            Build_SW = 'Fail'
                            error('Build failed')
                        }
                    }
                }
            }
            post {
                always {
                    archiveArtifacts artifacts: 'test_app_build.tar', fingerprint: true
                }
            }
        }

        stage('Flash and run Smoke test') {
            agent { label 'lasse' }
            steps {
                script {
                    catchError(buildResult: 'SUCCESS', stageResult: 'FAILURE') {
                        try {
                            unstash 'zephyr.bin'
                            checkout changelog: false, poll: false, scm: scmGit(branches: [[name: '*/main']],
                                extensions: [submodule(parentCredentials: true, reference: '')],
                                userRemoteConfigs: [[credentialsId: '533fc6b7-f0f5-4514-9629-1c55a011e1d3',
                                    url: 'git@github.com:AlifSemiDev/jenkins_automation.git']])
                            sh """#!/bin/bash -xe
                                ls -lart
                                rsync -a --delete $ALIF_SETOOLS_ORIG $ALIF_SETOOLS_LOCATION
                                cp zephyr.bin $ALIF_SETOOLS_LOCATION/build/images/test-app.bin
                                cp ble_automation/B1-test-app.json $ALIF_SETOOLS_LOCATION/build/config/
                                pushd $ALIF_SETOOLS_LOCATION
                                sed -e 's/ttyUSB0/ttyAlifSEDUT1/g' isp_config_data_temp.cfg > isp_config_data.cfg
                                ./tools-config -p "B1 (AB1C1F4M51820PH) - 1.8 MRAM / 2.0 SRAM" -r "A0"
                                ./app-gen-toc --filename build/config/B1-test-app.json
                                ./app-write-mram -p
                                sed -e 's/ttyUSB0/ttyAlifSEDUT2/g' isp_config_data_temp.cfg > isp_config_data.cfg
                                ./tools-config -p "B1 (AB1C1F4M51820PH) - 1.8 MRAM / 2.0 SRAM" -r "A0"
                                ./app-gen-toc --filename build/config/B1-test-app.json
                                ./app-write-mram -p
                                popd
                                """
                            reset_boards()
                            Flash_board = 'Pass'
                        } catch (Exception e) {
                            Flash_board = 'Fail'
                            error('Flash_board failed')
                        }
                    }
                    if (Flash_board == 'Pass') {
                        catchError(buildResult: 'SUCCESS', stageResult: 'FAILURE') {
                            try {
                                sh """
                                #!/bin/bash -xe
                                pwd
                                cd pytest
                                python3 -m venv venv
                                . venv/bin/activate
                                pip install -r requirements.txt
                                sed -e 's/ttyACM0/ttyAlifHEDUT1/g' -e 's/ttyACM1/ttyAlifHEDUT2/g' pytest_ini.template > pytest.ini
                                pytest tests --tb=no -s --root-logdir=pytest-logs
                                """
                                smoke_tests = 'Pass'
                            } catch (Exception e) {
                                smoke_tests = 'Fail'
                                error('Smoke_tests failed')
                            }
                        }
                    }
                }
            }
            post {
                always {
                    archiveArtifacts artifacts: 'pytest/pytest-logs/**', fingerprint: true
                    cleanWs(cleanWhenNotBuilt: false, deleteDirs:true,
                            disableDeferredWipeout: true, notFailBuild: true)
                }
            }
        }

        stage('Summary') {
            steps {
                script {
                    echo """
                    ========= Build Summary =========
                    Build_SW_Echo_Client      = ${Build_SW_Echo_Client}
                    Build_SW_Echo_Server      = ${Build_SW_Echo_Server}
                    Flash_board_echo_client   = ${Flash_board_echo_client}
                    Flash_board_echo_server   = ${Flash_board_echo_server}
                    Build_SW                  = ${Build_SW}
                    Flash_board               = ${Flash_board}
                    smoke_tests               = ${smoke_tests}
                    Build_SW_Broadcast_sink   = ${Build_SW_Broadcast_sink}
                    Build_SW_Broadcast_source = ${Build_SW_Broadcast_source}
                    Build_SW_Unicast_sink     = ${Build_SW_Unicast_sink}
                    Build_SW_unicast_source   = ${Build_SW_unicast_source}
                    Build_SW_Ble_beacon_sample = ${Build_SW_Ble_beacon_sample}
                    Build_SW_Ble_battery_sample = ${Build_SW_Ble_battery_sample}
                    Build_SW_Ble_blinky_sample = ${Build_SW_Ble_blinky_sample}
                    Build_SW_Ble_blood_pressure_sample = ${Build_SW_Ble_blood_pressure_sample}
                    Build_SW_Ble_continuos_glucose_monitor_sample = ${Build_SW_Ble_continuos_glucose_monitor_sample}
                    Build_SW_Ble_Cygling_Power_Sample = ${Build_SW_Ble_Cygling_Power_Sample}
                    Build_SW_Cygling_Speed_and_Cadence_Sample = ${Build_SW_Cygling_Speed_and_Cadence_Sample}
                    Build_SW_Build_Glucose_Profile_Sample= ${Build_SW_Build_Glucose_Profile_Sample}
                    Build_SW_Hello_Sample    = ${Build_SW_Hello_Sample}
                    Build_SW_Heart_Rate_Sample = ${Build_SW_Heart_Rate_Sample}
                    Build_SW_Health_Thermometer_Sample = ${Build_SW_Health_Thermometer_Sample}
                    Build_SW_le_periph_past    = ${Build_SW_le_periph_past}
                    Build_SW_Pulse_Oximeter_Sample = ${Build_SW_Pulse_Oximeter_Sample}
                    Build_SW_Proximity_Profile_Sample = ${Build_SW_Proximity_Profile_Sample}
                    Build_SW_Weight_Scale_Sample = ${Build_SW_Weight_Scale_Sample}
                    Build_SW_Mesh_Light_Bulb_Sample = ${Build_SW_Mesh_Light_Bulb_Sample}
                    Build_SW_SMP_Service       = ${Build_SW_SMP_Service}
                    Build_SW_Power_management_sample = ${Build_SW_Power_management_sample}
                    Build_SW_Running_Speed_And_Cadence_Sample = ${Build_SW_Running_Speed_And_Cadence_Sample}
                    Build_SW_Ble_Throughtput = ${Build_SW_Ble_Throughtput}
                    =================================
                    """

                    if ([Build_SW_Echo_Client, Build_SW_Echo_Server, Flash_board_echo_client, Flash_board_echo_server, Build_SW, Flash_board, smoke_tests, Build_SW_Broadcast_sink, Build_SW_Broadcast_source, Build_SW_Unicast_sink,
                    Build_SW_unicast_source, Build_SW_Ble_beacon_sample, Build_SW_Ble_battery_sample, Build_SW_Ble_blinky_sample, Build_SW_Ble_blood_pressure_sample, Build_SW_Ble_continuos_glucose_monitor_sample, Build_SW_Ble_Cygling_Power_Sample, Build_SW_Cygling_Speed_and_Cadence_Sample,
                    Build_SW_Build_Glucose_Profile_Sample, Build_SW_Hello_Sample, Build_SW_Heart_Rate_Sample, Build_SW_Health_Thermometer_Sample, Build_SW_le_periph_past, Build_SW_Pulse_Oximeter_Sample, Build_SW_Proximity_Profile_Sample,
                    Build_SW_Weight_Scale_Sample, Build_SW_Mesh_Light_Bulb_Sample, Build_SW_SMP_Service, Build_SW_Power_management_sample, Build_SW_Running_Speed_And_Cadence_Sample, Build_SW_Ble_Throughtput].contains('Fail')) {
                        currentBuild.result = 'FAILURE'
                        error("One or more stages failed.")
                    }
                }
            }
        }
    }

    post {
        success {
            echo " Pr check passed for ${env.BRANCH_NAME}"
        }
        failure {
            echo " Pr check failed for ${env.BRANCH_NAME}"
        }
    }
}
def reset_board() {
    def maxRetries = 10
    def success = false

    for (int attempt = 1; attempt <= maxRetries; attempt++) {
        println " Attempt #${attempt} to reset board"

        sh """#!/bin/bash -x
            ykushcmd ykushxs -s $YKUSHDUT1 -d
            ykushcmd ykushxs -s $YKUSHDUT2 -d
            sleep 10
            ykushcmd ykushxs -s $YKUSHDUT1 -u
            ykushcmd ykushxs -s $YKUSHDUT2 -u
            sleep 5
        """
        def checkStatus = sh(script: 'python3 $WORKSPACE/automation/check_uart_output.py', returnStatus: true)
        if (checkStatus == 0) {
            success = true
            break
        } else {
            println ' Retrying...'
        }
    }
    if (!success) {
        error " board did not respond after ${maxRetries} attempts!"
    }
}
def reset_boards() {
    def maxRetries = 10
    def success = false

    for (int attempt = 1; attempt <= maxRetries; attempt++) {
        println " Attempt #${attempt} to reset board"

        sh """#!/bin/bash -x
            ykushcmd ykushxs -s $YKUSHDUT1 -d
            ykushcmd ykushxs -s $YKUSHDUT2 -d
            sleep 10
            ykushcmd ykushxs -s $YKUSHDUT1 -u
            ykushcmd ykushxs -s $YKUSHDUT2 -u
            sleep 5
        """
        def checkStatus = sh(script: 'python3 ble_automation/check_uart_output.py', returnStatus: true)
        if (checkStatus == 0) {
            success = true
            break
        } else {
            println ' Retrying...'
        }
    }
    if (!success) {
        error " board did not respond after ${maxRetries} attempts!"
    }
}

